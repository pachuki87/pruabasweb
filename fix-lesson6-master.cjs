const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');

// Configuraci√≥n de Supabase
const supabaseUrl = 'https://lyojcqiiixkqqtpoejdo.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx5b2pjcWlpaXhrcXF0cG9lamRvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NzQ5ODAzMCwiZXhwIjoyMDYzMDc0MDMwfQ.hM0gJ9SiugPCMB6MyvcqjEvvDT648hf3HLPoDRomhuM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function fixLesson6Master() {
  try {
    console.log('üîß Solucionando lecci√≥n 6 del Master en Adicciones...');
    
    // Leer el contenido HTML del archivo
    const htmlFilePath = path.join(__dirname, 'public', 'lessons', 'leccion-6-intervencion-familiar-y-recovery-mentoring.html');
    
    if (!fs.existsSync(htmlFilePath)) {
      console.error('‚ùå No se encontr√≥ el archivo HTML:', htmlFilePath);
      return;
    }
    
    const htmlContent = fs.readFileSync(htmlFilePath, 'utf8');
    console.log('üìÑ Contenido HTML le√≠do:', htmlContent.length, 'caracteres');
    
    // Buscar el curso Master en Adicciones
    const { data: cursos, error: cursosError } = await supabase
      .from('cursos')
      .select('id, titulo')
      .ilike('titulo', '%m√°ster%adicciones%');
    
    if (cursosError) {
      console.error('‚ùå Error al buscar cursos:', cursosError);
      return;
    }
    
    if (!cursos || cursos.length === 0) {
      console.log('‚ö†Ô∏è No se encontr√≥ el curso Master en Adicciones');
      return;
    }
    
    const cursoId = cursos[0].id;
    console.log('üéØ ID del curso Master:', cursoId);
    
    // Actualizar la lecci√≥n 6
    const { data: updateResult, error: updateError } = await supabase
      .from('lecciones')
      .update({
        contenido_html: htmlContent,
        archivo_url: '/lessons/leccion-6-intervencion-familiar-y-recovery-mentoring.html',
        titulo: 'INTERVENCI√ìN FAMILIAR Y RECOVERY MENTORING',
        descripcion: 'Estrategias de intervenci√≥n familiar y mentoring en procesos de recuperaci√≥n de adicciones',
        actualizado_en: new Date().toISOString()
      })
      .eq('curso_id', cursoId)
      .eq('orden', 6)
      .select();
    
    if (updateError) {
      console.error('‚ùå Error al actualizar la lecci√≥n:', updateError);
      return;
    }
    
    console.log('‚úÖ Lecci√≥n 6 actualizada exitosamente!');
    console.log('üìä Resultado:', updateResult);
    
    // Verificar la actualizaci√≥n
    const { data: verificacion, error: verError } = await supabase
      .from('lecciones')
      .select('titulo, descripcion, contenido_html, archivo_url')
      .eq('curso_id', cursoId)
      .eq('orden', 6)
      .single();
    
    if (verError) {
      console.error('‚ùå Error al verificar:', verError);
      return;
    }
    
    console.log('üîç Verificaci√≥n:');
    console.log('  üìù T√≠tulo:', verificacion.titulo);
    console.log('  üìÑ Descripci√≥n:', verificacion.descripcion);
    console.log('  üìã Contenido HTML:', verificacion.contenido_html ? 'S√ç (presente)' : 'NO (vac√≠o)');
    console.log('  üîó Archivo URL:', verificacion.archivo_url);
    
    if (verificacion.contenido_html) {
      console.log('  üìè Longitud del contenido:', verificacion.contenido_html.length, 'caracteres');
    }
    
  } catch (error) {
    console.error('üí• Error general:', error);
  }
}

fixLesson6Master();