import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://lyojcqiiixkqqtpoejdo.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx5b2pjcWlpaXhrcXF0cG9lamRvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NzQ5ODAzMCwiZXhwIjoyMDYzMDc0MDMwfQ.hM0gJ9SiugPCMB6MyvcqjEvvDT648hf3HLPoDRomhuM';

const supabase = createClient(supabaseUrl, supabaseKey);

// Datos del cuestionario para lecci√≥n 2 basado en insert_quiz_content.cjs
const lesson2QuizData = {
  leccionTitulo: "¬øQu√© es una adicci√≥n 1 Cuestionario",
  leccionNumero: 2,
  quizTitulo: "Cuestionario: Conceptos b√°sicos de adicci√≥n",
  preguntas: [
    {
      pregunta: "¬øCu√°l es la caracter√≠stica principal de una adicci√≥n seg√∫n el DSM-5?",
      opciones: [
        "El uso ocasional de sustancias",
        "La p√©rdida de control y uso compulsivo",
        "El uso social de sustancias",
        "La experimentaci√≥n con drogas"
      ],
      correcta: 1,
      explicacion: "La adicci√≥n se caracteriza principalmente por la p√©rdida de control sobre el uso y el comportamiento compulsivo a pesar de las consecuencias negativas."
    },
    {
      pregunta: "¬øQu√© diferencia hay entre dependencia f√≠sica y psicol√≥gica?",
      opciones: [
        "No hay diferencia",
        "La f√≠sica involucra s√≠ntomas de abstinencia, la psicol√≥gica involucra deseo compulsivo",
        "Solo la f√≠sica es real",
        "Solo la psicol√≥gica es peligrosa"
      ],
      correcta: 1,
      explicacion: "La dependencia f√≠sica se manifiesta con s√≠ntomas de abstinencia cuando se suspende el uso, mientras que la psicol√≥gica se caracteriza por el deseo compulsivo y la preocupaci√≥n mental por la sustancia."
    }
  ]
};

async function createLesson2Quiz() {
  try {
    console.log('üöÄ Creando cuestionario para lecci√≥n 2...');
    
    // Obtener el curso
    const { data: course } = await supabase
      .from('cursos')
      .select('id')
      .eq('titulo', 'Experto en Conductas Adictivas')
      .single();
    
    if (!course) {
      console.log('‚ùå Curso no encontrado');
      return;
    }
    
    console.log(`‚úÖ Curso encontrado: ${course.id}`);
    
    // Obtener la lecci√≥n 2
    const { data: lesson } = await supabase
      .from('lecciones')
      .select('id')
      .eq('curso_id', course.id)
      .eq('orden', 2)
      .single();
    
    if (!lesson) {
      console.log('‚ùå Lecci√≥n 2 no encontrada');
      return;
    }
    
    console.log(`‚úÖ Lecci√≥n 2 encontrada: ${lesson.id}`);
    
    // Crear el cuestionario
    const { data: quiz, error: quizError } = await supabase
      .from('cuestionarios')
      .insert({
        titulo: lesson2QuizData.quizTitulo,
        leccion_id: lesson.id,
        curso_id: course.id
      })
      .select()
      .single();
    
    if (quizError) {
      console.error('‚ùå Error al crear cuestionario:', quizError);
      return;
    }
    
    console.log(`‚úÖ Cuestionario creado: ${quiz.titulo} (ID: ${quiz.id})`);
    
    // Insertar preguntas
    for (let i = 0; i < lesson2QuizData.preguntas.length; i++) {
      const questionData = lesson2QuizData.preguntas[i];
      
      console.log(`üìã Insertando pregunta ${i + 1}: ${questionData.pregunta.substring(0, 50)}...`);
      
      const { data: pregunta, error: preguntaError } = await supabase
        .from('preguntas')
        .insert({
          cuestionario_id: quiz.id,
          pregunta: questionData.pregunta,
          tipo: 'multiple_choice',
          orden: i + 1,
          explicacion: questionData.explicacion
        })
        .select()
        .single();
      
      if (preguntaError) {
        console.error(`‚ùå Error al insertar pregunta:`, preguntaError);
        continue;
      }
      
      // Insertar opciones de respuesta
      for (let j = 0; j < questionData.opciones.length; j++) {
        const { error: opcionError } = await supabase
          .from('opciones_respuesta')
          .insert({
            pregunta_id: pregunta.id,
            opcion: questionData.opciones[j],
            es_correcta: j === questionData.correcta,
            orden: j + 1
          });
        
        if (opcionError) {
          console.error(`‚ùå Error al insertar opci√≥n:`, opcionError);
        }
      }
      
      console.log(`‚úÖ Pregunta insertada con ${questionData.opciones.length} opciones`);
    }
    
    // Actualizar la lecci√≥n para marcar que tiene cuestionario
    const { error: updateError } = await supabase
      .from('lecciones')
      .update({ tiene_cuestionario: true })
      .eq('id', lesson.id);
    
    if (updateError) {
      console.error('‚ö†Ô∏è  Error al actualizar lecci√≥n:', updateError);
    } else {
      console.log('‚úÖ Lecci√≥n actualizada con tiene_cuestionario = true');
    }
    
    console.log(`\nüéâ ¬°Cuestionario para lecci√≥n 2 creado exitosamente!`);
    console.log(`üìä Cuestionario: ${quiz.titulo}`);
    console.log(`üìù Preguntas insertadas: ${lesson2QuizData.preguntas.length}`);
    console.log(`üîó ID del cuestionario: ${quiz.id}`);
    
  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

createLesson2Quiz();