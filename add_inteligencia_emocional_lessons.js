import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

// Cargar variables de entorno
dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
// Usar service role key para operaciones administrativas
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Error: Variables de entorno de Supabase no encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

// ID del curso M√ÅSTER EN ADICCIONES E INTERVENCI√ìN PSICOSOCIAL
const MASTER_COURSE_ID = 'b5ef8c64-fe26-4f20-8221-80a1bf475b05';

// Lecciones basadas en la estructura del directorio inteligencia_emocional_drive
const lecciones = [
  {
    titulo: 'Fundamentos del Proceso Terap√©utico',
    descripcion: 'Introducci√≥n a los fundamentos del proceso terap√©utico en el tratamiento de adicciones. Incluye conceptos b√°sicos y metodolog√≠as terap√©uticas.',
    orden: 13,
    duracion_estimada: 120,
    tiene_cuestionario: true
  },
  {
    titulo: 'Terapia Cognitiva en Drogodependencias',
    descripcion: 'Aplicaci√≥n de la terapia cognitiva en el tratamiento de drogodependencias. T√©cnicas y estrategias cognitivo-conductuales.',
    orden: 14,
    duracion_estimada: 150,
    tiene_cuestionario: true
  },
  {
    titulo: 'Familia y Trabajo en Equipo',
    descripcion: 'La importancia del trabajo familiar y en equipo en el proceso de recuperaci√≥n. Estrategias de intervenci√≥n familiar.',
    orden: 15,
    duracion_estimada: 135,
    tiene_cuestionario: true
  },
  {
    titulo: 'Recovery Coaching',
    descripcion: 'Metodolog√≠a del Recovery Coaching. T√©cnicas de acompa√±amiento y mentoring en procesos de recuperaci√≥n.',
    orden: 16,
    duracion_estimada: 140,
    tiene_cuestionario: true
  },
  {
    titulo: 'Intervenci√≥n Familiar y Recovery Mentoring',
    descripcion: 'T√©cnicas avanzadas de intervenci√≥n familiar y mentoring en recovery. Gu√≠as especializadas y t√©cnicas comunicativas.',
    orden: 17,
    duracion_estimada: 160,
    tiene_cuestionario: true
  },
  {
    titulo: 'Nuevos Modelos Terap√©uticos',
    descripcion: 'Exploraci√≥n de nuevos modelos terap√©uticos incluyendo terapias de tercera generaci√≥n, psicolog√≠a positiva y manejo del estr√©s.',
    orden: 18,
    duracion_estimada: 180,
    tiene_cuestionario: true
  },
  {
    titulo: 'Inteligencia Emocional Aplicada',
    descripcion: 'Aplicaci√≥n de la inteligencia emocional en la prevenci√≥n y tratamiento de conductas adictivas. Desarrollo de habilidades emocionales.',
    orden: 19,
    duracion_estimada: 145,
    tiene_cuestionario: true
  }
];

async function insertarLecciones() {
  console.log('üöÄ Iniciando inserci√≥n de lecciones de inteligencia emocional...');
  console.log(`üìö Curso destino: M√ÅSTER EN ADICCIONES E INTERVENCI√ìN PSICOSOCIAL (${MASTER_COURSE_ID})`);
  console.log(`üìù Lecciones a insertar: ${lecciones.length}`);
  console.log('');

  try {
    // Verificar que el curso existe
    const { data: curso, error: cursoError } = await supabase
      .from('cursos')
      .select('id, titulo')
      .eq('id', MASTER_COURSE_ID)
      .single();

    if (cursoError || !curso) {
      console.error('‚ùå Error: No se encontr√≥ el curso especificado');
      return;
    }

    console.log(`‚úÖ Curso encontrado: ${curso.titulo}`);
    console.log('');

    // Insertar cada lecci√≥n
    for (const leccion of lecciones) {
      const leccionData = {
        ...leccion,
        curso_id: MASTER_COURSE_ID,
        creado_en: new Date().toISOString(),
        actualizado_en: new Date().toISOString()
      };

      const { data, error } = await supabase
        .from('lecciones')
        .insert([leccionData])
        .select();

      if (error) {
        console.error(`‚ùå Error insertando lecci√≥n "${leccion.titulo}":`, error.message);
      } else {
        console.log(`‚úÖ Lecci√≥n insertada: "${leccion.titulo}" (Orden: ${leccion.orden})`);
      }
    }

    console.log('');
    console.log('üéâ Proceso completado!');
    
    // Verificar el total de lecciones del curso
    const { data: totalLecciones, error: countError } = await supabase
      .from('lecciones')
      .select('id', { count: 'exact' })
      .eq('curso_id', MASTER_COURSE_ID);

    if (!countError) {
      console.log(`üìä Total de lecciones en el curso: ${totalLecciones.length}`);
    }

  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

// Ejecutar la funci√≥n
insertarLecciones();