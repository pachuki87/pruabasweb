require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

const supabase = createClient(supabaseUrl, supabaseKey);

async function assignMatrixToLesson1() {
  try {
    console.log('üîß Asignando material MATRIX a la lecci√≥n 1...');
    
    const materialId = '8f6424b2-61c5-4a58-900b-ce082601609d';
    const leccion1Id = '5cc8702c-45ab-4ae4-8e9a-df1d5c2c6e44';
    
    // Actualizar el material para asignarlo a la lecci√≥n 1
    const { data, error } = await supabase
      .from('materiales')
      .update({ leccion_id: leccion1Id })
      .eq('id', materialId)
      .select();
    
    if (error) {
      console.error('‚ùå Error asignando material:', error);
      return;
    }
    
    if (data && data.length > 0) {
      console.log('‚úÖ Material MATRIX asignado exitosamente a la lecci√≥n 1:');
      console.log(`   ID: ${data[0].id}`);
      console.log(`   T√≠tulo: ${data[0].titulo}`);
      console.log(`   Lecci√≥n ID: ${data[0].leccion_id}`);
      console.log(`   URL: ${data[0].url_archivo}`);
    } else {
      console.log('‚úÖ Material actualizado (sin datos de retorno)');
    }
    
    // Verificar que la asignaci√≥n fue exitosa
    const { data: verification, error: verifyError } = await supabase
      .from('materiales')
      .select('id, titulo, leccion_id')
      .eq('leccion_id', leccion1Id);
    
    if (!verifyError) {
      console.log('\nüìã Materiales en la lecci√≥n 1 despu√©s de la asignaci√≥n:');
      verification.forEach((material, index) => {
        console.log(`   ${index + 1}. ${material.titulo} (ID: ${material.id})`);
      });
    }
    
    console.log('\n‚úÖ Proceso completado. El material MATRIX ahora est√° correctamente asignado a la lecci√≥n 1.');
    
  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

assignMatrixToLesson1();